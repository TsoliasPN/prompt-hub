name: 'Issue Integration Test'

on:
  workflow_dispatch:
    inputs:
      title:
        description: 'Issue title'
        required: false
        default: 'Integration test: create and close'
      body:
        description: 'Issue body'
        required: false
        default: 'This issue was created by a GitHub Actions workflow to verify issue permissions and then closed.'
      labels:
        description: 'Comma-separated labels (optional)'
        required: false
        default: 'automation,test'

permissions:
  contents: read
  issues: write

jobs:
  create-and-close:
    runs-on: ubuntu-latest
    steps:
      - name: Create issue
        id: create_issue
        uses: actions/github-script@v7
        with:
          script: |
            const title = core.getInput('title');
            const body = core.getInput('body');
            const labelsInput = core.getInput('labels');
            const labels = labelsInput ? labelsInput.split(',').map(s => s.trim()).filter(Boolean) : [];
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
              labels,
            });
            core.info(`Created issue #${issue.data.number}`);
            return issue.data.number;

      - name: Comment on issue
        uses: actions/github-script@v7
        env:
          ISSUE_NUMBER: ${{ steps.create_issue.outputs.result }}
        with:
          script: |
            const number = parseInt(process.env.ISSUE_NUMBER, 10);
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              body: 'Automated check: closing this issue to verify integration.',
            });
            core.info(`Commented on issue #${number}`);

      - name: Close issue
        uses: actions/github-script@v7
        env:
          ISSUE_NUMBER: ${{ steps.create_issue.outputs.result }}
        with:
          script: |
            const number = parseInt(process.env.ISSUE_NUMBER, 10);
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              state: 'closed',
            });
            core.info(`Closed issue #${number}`);
